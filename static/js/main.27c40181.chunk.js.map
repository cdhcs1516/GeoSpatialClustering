{"version":3,"sources":["logo.svg","exportToExcel.js","App.js","reportWebVitals.js","index.js"],"names":["exportToCSV","apiData","fileName","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","App","useState","dataUrl","setDataUrl","numPts","setNumPts","westLng","setWestLng","eastLng","setEastLng","northLat","setNorthLat","southLat","setSouthLat","radius","setRadius","zoom","setZoom","points","setPoints","clusterIndex","setClusterIndex","numCluster","setNumCluster","getCorrespondingCluster","markerId","mapsClusterToMarkers","key","has","className","placeholder","name","value","onChange","e","target","disabled","onClick","preventDefault","fetch","then","response","json","console","log","length","pts","map","marker","properties","cluster","id","geometry","coordinates","parseFloat","stoplng","stoplat","catch","err","index","Supercluster","maxZoom","load","curCluster","getClusters","saved_clusters","clusterId","count","point_count","longitude","latitude","Map","forEach","markerSet","Set","getLeaves","Infinity","leaf","set","saved_markers","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27c40181.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport const exportToCSV = (apiData, fileName) => {\r\n    const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n};","import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Supercluster from 'supercluster';\nimport {exportToCSV} from './exportToExcel';\nimport React, { useState } from 'react'\n\nexport default function App() {\n\n  const [dataUrl, setDataUrl] = useState(\"\");\n  const [numPts, setNumPts] = useState(0);\n  const [westLng, setWestLng] = useState(-180.0);\n  const [eastLng, setEastLng] = useState(180.0);\n  const [northLat, setNorthLat] = useState(90.0);\n  const [southLat, setSouthLat] = useState(-90.0);\n  const [radius, setRadius] = useState(30);\n  const [zoom, setZoom] = useState(4);\n  const [points, setPoints] = useState({});\n  const [clusterIndex, setClusterIndex] = useState({});\n  const [numCluster, setNumCluster] = useState(-1);\n\n  const onInitial = (e) => {\n    e.preventDefault();\n\n    fetch(dataUrl)\n      .then(function (response) {\n        \n        return response.json();\n      })\n      .then(function (data) {\n        console.log(data.length);\n        \n        // modify codes below to fit for your data\n        const pts = data.map(marker => ({\n          type: \"Feature\",\n          properties: {cluster: false, markerId: marker.id},\n          geometry: {\n            type: \"Point\",\n            coordinates: [\n              parseFloat(marker.stoplng),\n              parseFloat(marker.stoplat)\n            ]\n          }\n        }));\n        setPoints(pts);\n        console.log(points);\n        if (points.length > 0) {\n          setNumPts(points.length);\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n    \n    const index = new Supercluster({\n      radius: radius,\n      maxZoom: 16\n    })\n    index.load(points);\n    setClusterIndex(index);\n  }\n\n  const getCorrespondingCluster = (markerId, mapsClusterToMarkers) => {\n    for (const [key, value] of mapsClusterToMarkers) {\n      if (value.has(markerId)) {\n        return key;\n      }\n    }\n    return -1;\n  }\n\n  const onProcess = (e) => {\n    e.preventDefault();\n\n    const curCluster = clusterIndex.getClusters([westLng, southLat, eastLng, northLat], zoom);\n    setNumCluster(curCluster.length)\n\n    console.log(curCluster);\n  }\n\n  const saveClusters = () => {\n    const curCluster = clusterIndex.getClusters([westLng, southLat, eastLng, northLat], zoom);\n    setNumCluster(curCluster.length)\n\n    let saved_clusters = curCluster.map(cluster => ({\n      clusterId: cluster.id,\n      count: cluster.properties.point_count,\n      longitude: cluster.geometry.coordinates[0],\n      latitude: cluster.geometry.coordinates[1]\n    }));\n\n    exportToCSV(saved_clusters, 'clusters');\n  }\n\n  const saveMarkers = () => {\n    const curCluster = clusterIndex.getClusters([westLng, southLat, eastLng, northLat], zoom);\n    setNumCluster(curCluster.length)\n\n    const mapsClusterToMarkers = new Map();\n\n    curCluster.forEach(cluster => {\n      let markerSet = new Set(clusterIndex.getLeaves(cluster.id, Infinity).map(leaf => (leaf.properties.markerId)));\n      mapsClusterToMarkers.set(cluster.id, markerSet);\n    });\n\n    let saved_markers = points.map(pt => ({\n      markerId: pt.properties.markerId,\n      longitude: pt.geometry.coordinates[0],\n      latitude: pt.geometry.coordinates[1],\n      clusterId: getCorrespondingCluster(pt.properties.markerId, mapsClusterToMarkers)\n    }));\n\n    exportToCSV(saved_markers, 'markers');\n  }\n\n  \n  return (\n    <div>\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 m-auto\">\n              <h5 className=\"display-4 text-center\">GeoSpatial Clustering Tool</h5>\n              <hr />\n              <form>\n                <p>Url of JSON Data</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"url\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Data Url\"\n                    name=\"dataUrl\"\n                    value={dataUrl}\n                    onChange={(e) => setDataUrl(e.target.value)}\n                  />\n                </div>\n                <p>West Longitude of BBox</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"West Longitude\"\n                    name=\"westLng\"\n                    value={westLng}\n                    onChange={(e) => setWestLng(e.target.value)}\n                  />\n                </div>\n                <p>East Longitude of BBox</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"East Longitude\"\n                    name=\"eastLng\"\n                    value={eastLng}\n                    onChange={(e) => setEastLng(e.target.value)}\n                  />\n                </div>\n                <p>North Latitude of BBox</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"North Latitude\"\n                    name=\"northLat\"\n                    value={northLat}\n                    onChange={(e) => setNorthLat(e.target.value)}\n                  />\n                </div>\n                <p>South Latitude of BBox</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"South Latitude\"\n                    name=\"southLat\"\n                    value={southLat}\n                    onChange={(e) => setSouthLat(e.target.value)}\n                  />\n                </div>\n                <p>Current Zoom Level (from 0 to 16)</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Zoom Level\"\n                    name=\"zoom\"\n                    value={zoom}\n                    onChange={(e) => setZoom(e.target.value)}\n                  />\n                </div>\n                <p>Radius (px) for Clustering</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Radius\"\n                    name=\"radius\"\n                    value={radius}\n                    onChange={(e) => setRadius(e.target.value)}\n                  />\n                </div>\n                <hr/>\n                <p>Number of Points Loaded</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Number of Points Loaded\"\n                    name=\"numPts\"\n                    value={numPts}\n                    disabled\n                  />\n                </div>\n                <button onClick={onInitial} className=\"btn btn-primary btn-block mt-4\">Load Data and Initialize SuperCluster</button>\n              </form>\n\n              {/* for results and download */}\n              <hr/>\n              <h5 className=\"display-4 text-center\">Cluster Result</h5>\n              <hr/>\n              <form>\n                <p>Number of Clusters</p>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Number of Clusters\"\n                    name=\"numCluster\"\n                    value={numCluster}\n                    disabled\n                  />\n                </div>\n                \n                <button onClick={onProcess} className=\"btn btn-primary btn-block mt-4\">Process Cluster</button>\n              </form>\n              <hr/>\n              <div className=\"d-grid gap-2 col-3 mx-auto\">\n                <button onClick={saveClusters} className=\"btn btn-primary\">Save Clusters</button>\n                <button onClick={saveMarkers} className=\"btn btn-primary\">Save Markers</button>\n              </div>\n              <hr/>\n              <p className=\"text-center\">Implemented by Donghui Chen based on React and mapbox/supercluster.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n  \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}